// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace LinuxGUITest {
    
    
    public partial class WiimoteInformation {
        
        private Gtk.Action WiiMoteAction;
        
        private Gtk.Action DisconnectAction;
        
        private Gtk.Action PlaySoundAction;
        
        private Gtk.Action DumpMemoryAction;
        
        private Gtk.Action DisconnectAction1;
        
        private Gtk.Action CalibrateAction;
        
        private Gtk.VBox vbox1;
        
        private Gtk.MenuBar menubar1;
        
        private Gtk.HBox hbox5;
        
        private Gtk.Label lblReportingMode;
        
        private Gtk.ComboBox comboboxReportingMode;
        
        private Gtk.HBox hbox4;
        
        private Gtk.Label lblButtons;
        
        private Gtk.Entry entryButtons;
        
        private Gtk.Frame frame1;
        
        private Gtk.Alignment GtkAlignment;
        
        private Gtk.DrawingArea drawingareaIR;
        
        private Gtk.Label GtkLabel3;
        
        private Gtk.Frame frame2;
        
        private Gtk.Alignment GtkAlignment1;
        
        private Gtk.HBox hbox6;
        
        private Gtk.Entry entryX;
        
        private Gtk.Entry entryY;
        
        private Gtk.Entry entryZ;
        
        private Gtk.Label GtkLabel4;
        
        private Gtk.Frame frame3;
        
        private Gtk.Alignment GtkAlignment2;
        
        private Gtk.Label GtkLabel1;
        
        private Gtk.HBox hbox2;
        
        private Gtk.CheckButton checkboxLed1;
        
        private Gtk.CheckButton checkboxLed2;
        
        private Gtk.CheckButton checkboxLed3;
        
        private Gtk.CheckButton checkboxLed4;
        
        private Gtk.CheckButton checkboxRumble;
        
        private Gtk.HBox hbox3;
        
        private Gtk.Button btnUpdateBattery;
        
        private Gtk.ProgressBar progressbarBattery;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget LinuxGUITest.WiimoteInformation
            Stetic.BinContainer w1 = Stetic.BinContainer.Attach(this);
            Gtk.UIManager w2 = new Gtk.UIManager();
            Gtk.ActionGroup w3 = new Gtk.ActionGroup("Default");
            this.WiiMoteAction = new Gtk.Action("WiiMoteAction", Mono.Unix.Catalog.GetString("WiiMote"), null, null);
            this.WiiMoteAction.ShortLabel = Mono.Unix.Catalog.GetString("Tools");
            w3.Add(this.WiiMoteAction, null);
            this.DisconnectAction = new Gtk.Action("DisconnectAction", Mono.Unix.Catalog.GetString("Disconnect"), null, null);
            this.DisconnectAction.HideIfEmpty = false;
            this.DisconnectAction.ShortLabel = Mono.Unix.Catalog.GetString("Disconnect");
            w3.Add(this.DisconnectAction, null);
            this.PlaySoundAction = new Gtk.Action("PlaySoundAction", Mono.Unix.Catalog.GetString("Play sound"), null, null);
            this.PlaySoundAction.ShortLabel = Mono.Unix.Catalog.GetString("Play sound");
            w3.Add(this.PlaySoundAction, null);
            this.DumpMemoryAction = new Gtk.Action("DumpMemoryAction", Mono.Unix.Catalog.GetString("Dump memory..."), null, null);
            this.DumpMemoryAction.ShortLabel = Mono.Unix.Catalog.GetString("Dump memory");
            w3.Add(this.DumpMemoryAction, null);
            this.DisconnectAction1 = new Gtk.Action("DisconnectAction1", Mono.Unix.Catalog.GetString("Disconnect"), null, null);
            this.DisconnectAction1.ShortLabel = Mono.Unix.Catalog.GetString("Disconnect");
            w3.Add(this.DisconnectAction1, null);
            this.CalibrateAction = new Gtk.Action("CalibrateAction", Mono.Unix.Catalog.GetString("Calibrate..."), null, null);
            this.CalibrateAction.ShortLabel = Mono.Unix.Catalog.GetString("Calibrate...");
            w3.Add(this.CalibrateAction, null);
            w2.InsertActionGroup(w3, 0);
            this.Name = "LinuxGUITest.WiimoteInformation";
            // Container child LinuxGUITest.WiimoteInformation.Gtk.Container+ContainerChild
            this.vbox1 = new Gtk.VBox();
            this.vbox1.Name = "vbox1";
            this.vbox1.Spacing = 6;
            // Container child vbox1.Gtk.Box+BoxChild
            w2.AddUiFromString("<ui><menubar name='menubar1'><menu action='WiiMoteAction'><menuitem action='DisconnectAction1'/><menuitem action='DumpMemoryAction'/><menuitem action='CalibrateAction'/></menu></menubar></ui>");
            this.menubar1 = ((Gtk.MenuBar)(w2.GetWidget("/menubar1")));
            this.menubar1.Name = "menubar1";
            this.vbox1.Add(this.menubar1);
            Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(this.vbox1[this.menubar1]));
            w4.Position = 0;
            w4.Expand = false;
            w4.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            this.hbox5 = new Gtk.HBox();
            this.hbox5.Name = "hbox5";
            this.hbox5.Spacing = 6;
            // Container child hbox5.Gtk.Box+BoxChild
            this.lblReportingMode = new Gtk.Label();
            this.lblReportingMode.Name = "lblReportingMode";
            this.lblReportingMode.LabelProp = Mono.Unix.Catalog.GetString("Reporting Mode");
            this.hbox5.Add(this.lblReportingMode);
            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.hbox5[this.lblReportingMode]));
            w5.Position = 0;
            w5.Expand = false;
            w5.Fill = false;
            // Container child hbox5.Gtk.Box+BoxChild
            this.comboboxReportingMode = Gtk.ComboBox.NewText();
            this.comboboxReportingMode.Name = "comboboxReportingMode";
            this.hbox5.Add(this.comboboxReportingMode);
            Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(this.hbox5[this.comboboxReportingMode]));
            w6.Position = 1;
            this.vbox1.Add(this.hbox5);
            Gtk.Box.BoxChild w7 = ((Gtk.Box.BoxChild)(this.vbox1[this.hbox5]));
            w7.Position = 1;
            w7.Expand = false;
            w7.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            this.hbox4 = new Gtk.HBox();
            this.hbox4.Name = "hbox4";
            this.hbox4.Spacing = 6;
            // Container child hbox4.Gtk.Box+BoxChild
            this.lblButtons = new Gtk.Label();
            this.lblButtons.Name = "lblButtons";
            this.lblButtons.LabelProp = Mono.Unix.Catalog.GetString("Buttons");
            this.hbox4.Add(this.lblButtons);
            Gtk.Box.BoxChild w8 = ((Gtk.Box.BoxChild)(this.hbox4[this.lblButtons]));
            w8.Position = 0;
            w8.Expand = false;
            w8.Fill = false;
            // Container child hbox4.Gtk.Box+BoxChild
            this.entryButtons = new Gtk.Entry();
            this.entryButtons.CanFocus = true;
            this.entryButtons.Name = "entryButtons";
            this.entryButtons.IsEditable = false;
            this.entryButtons.InvisibleChar = '●';
            this.hbox4.Add(this.entryButtons);
            Gtk.Box.BoxChild w9 = ((Gtk.Box.BoxChild)(this.hbox4[this.entryButtons]));
            w9.Position = 1;
            this.vbox1.Add(this.hbox4);
            Gtk.Box.BoxChild w10 = ((Gtk.Box.BoxChild)(this.vbox1[this.hbox4]));
            w10.Position = 2;
            w10.Expand = false;
            w10.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            this.frame1 = new Gtk.Frame();
            this.frame1.Name = "frame1";
            this.frame1.ShadowType = ((Gtk.ShadowType)(0));
            // Container child frame1.Gtk.Container+ContainerChild
            this.GtkAlignment = new Gtk.Alignment(0F, 0F, 1F, 1F);
            this.GtkAlignment.Name = "GtkAlignment";
            this.GtkAlignment.LeftPadding = ((uint)(12));
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            this.drawingareaIR = new Gtk.DrawingArea();
            this.drawingareaIR.HeightRequest = 100;
            this.drawingareaIR.Name = "drawingareaIR";
            this.GtkAlignment.Add(this.drawingareaIR);
            this.frame1.Add(this.GtkAlignment);
            this.GtkLabel3 = new Gtk.Label();
            this.GtkLabel3.Name = "GtkLabel3";
            this.GtkLabel3.LabelProp = Mono.Unix.Catalog.GetString("<b>IR points</b>");
            this.GtkLabel3.UseMarkup = true;
            this.frame1.LabelWidget = this.GtkLabel3;
            this.vbox1.Add(this.frame1);
            Gtk.Box.BoxChild w13 = ((Gtk.Box.BoxChild)(this.vbox1[this.frame1]));
            w13.Position = 3;
            // Container child vbox1.Gtk.Box+BoxChild
            this.frame2 = new Gtk.Frame();
            this.frame2.Name = "frame2";
            this.frame2.ShadowType = ((Gtk.ShadowType)(0));
            // Container child frame2.Gtk.Container+ContainerChild
            this.GtkAlignment1 = new Gtk.Alignment(0F, 0F, 1F, 1F);
            this.GtkAlignment1.Name = "GtkAlignment1";
            this.GtkAlignment1.LeftPadding = ((uint)(12));
            // Container child GtkAlignment1.Gtk.Container+ContainerChild
            this.hbox6 = new Gtk.HBox();
            this.hbox6.Name = "hbox6";
            this.hbox6.Spacing = 6;
            // Container child hbox6.Gtk.Box+BoxChild
            this.entryX = new Gtk.Entry();
            this.entryX.WidthRequest = 80;
            this.entryX.CanFocus = true;
            this.entryX.Name = "entryX";
            this.entryX.IsEditable = false;
            this.entryX.InvisibleChar = '●';
            this.hbox6.Add(this.entryX);
            Gtk.Box.BoxChild w14 = ((Gtk.Box.BoxChild)(this.hbox6[this.entryX]));
            w14.Position = 0;
            w14.Expand = false;
            // Container child hbox6.Gtk.Box+BoxChild
            this.entryY = new Gtk.Entry();
            this.entryY.WidthRequest = 80;
            this.entryY.CanFocus = true;
            this.entryY.Name = "entryY";
            this.entryY.IsEditable = false;
            this.entryY.InvisibleChar = '●';
            this.hbox6.Add(this.entryY);
            Gtk.Box.BoxChild w15 = ((Gtk.Box.BoxChild)(this.hbox6[this.entryY]));
            w15.Position = 1;
            w15.Expand = false;
            // Container child hbox6.Gtk.Box+BoxChild
            this.entryZ = new Gtk.Entry();
            this.entryZ.WidthRequest = 80;
            this.entryZ.CanFocus = true;
            this.entryZ.Name = "entryZ";
            this.entryZ.IsEditable = false;
            this.entryZ.InvisibleChar = '●';
            this.hbox6.Add(this.entryZ);
            Gtk.Box.BoxChild w16 = ((Gtk.Box.BoxChild)(this.hbox6[this.entryZ]));
            w16.Position = 2;
            w16.Expand = false;
            w16.Fill = false;
            this.GtkAlignment1.Add(this.hbox6);
            this.frame2.Add(this.GtkAlignment1);
            this.GtkLabel4 = new Gtk.Label();
            this.GtkLabel4.Name = "GtkLabel4";
            this.GtkLabel4.LabelProp = Mono.Unix.Catalog.GetString("<b>Accelerometers</b>");
            this.GtkLabel4.UseMarkup = true;
            this.frame2.LabelWidget = this.GtkLabel4;
            this.vbox1.Add(this.frame2);
            Gtk.Box.BoxChild w19 = ((Gtk.Box.BoxChild)(this.vbox1[this.frame2]));
            w19.Position = 4;
            w19.Expand = false;
            w19.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            this.frame3 = new Gtk.Frame();
            this.frame3.Name = "frame3";
            this.frame3.ShadowType = ((Gtk.ShadowType)(0));
            // Container child frame3.Gtk.Container+ContainerChild
            this.GtkAlignment2 = new Gtk.Alignment(0F, 0F, 1F, 1F);
            this.GtkAlignment2.Name = "GtkAlignment2";
            this.GtkAlignment2.LeftPadding = ((uint)(12));
            this.frame3.Add(this.GtkAlignment2);
            this.GtkLabel1 = new Gtk.Label();
            this.GtkLabel1.Name = "GtkLabel1";
            this.GtkLabel1.LabelProp = Mono.Unix.Catalog.GetString("<b>Extension</b>");
            this.GtkLabel1.UseMarkup = true;
            this.frame3.LabelWidget = this.GtkLabel1;
            this.vbox1.Add(this.frame3);
            Gtk.Box.BoxChild w21 = ((Gtk.Box.BoxChild)(this.vbox1[this.frame3]));
            w21.Position = 5;
            // Container child vbox1.Gtk.Box+BoxChild
            this.hbox2 = new Gtk.HBox();
            this.hbox2.Name = "hbox2";
            this.hbox2.Spacing = 6;
            // Container child hbox2.Gtk.Box+BoxChild
            this.checkboxLed1 = new Gtk.CheckButton();
            this.checkboxLed1.CanFocus = true;
            this.checkboxLed1.Name = "checkboxLed1";
            this.checkboxLed1.Label = Mono.Unix.Catalog.GetString("Led1");
            this.checkboxLed1.DrawIndicator = true;
            this.checkboxLed1.UseUnderline = true;
            this.hbox2.Add(this.checkboxLed1);
            Gtk.Box.BoxChild w22 = ((Gtk.Box.BoxChild)(this.hbox2[this.checkboxLed1]));
            w22.Position = 0;
            w22.Expand = false;
            // Container child hbox2.Gtk.Box+BoxChild
            this.checkboxLed2 = new Gtk.CheckButton();
            this.checkboxLed2.CanFocus = true;
            this.checkboxLed2.Name = "checkboxLed2";
            this.checkboxLed2.Label = Mono.Unix.Catalog.GetString("Led 2");
            this.checkboxLed2.DrawIndicator = true;
            this.checkboxLed2.UseUnderline = true;
            this.hbox2.Add(this.checkboxLed2);
            Gtk.Box.BoxChild w23 = ((Gtk.Box.BoxChild)(this.hbox2[this.checkboxLed2]));
            w23.Position = 1;
            w23.Expand = false;
            // Container child hbox2.Gtk.Box+BoxChild
            this.checkboxLed3 = new Gtk.CheckButton();
            this.checkboxLed3.CanFocus = true;
            this.checkboxLed3.Name = "checkboxLed3";
            this.checkboxLed3.Label = Mono.Unix.Catalog.GetString("Led 3");
            this.checkboxLed3.DrawIndicator = true;
            this.checkboxLed3.UseUnderline = true;
            this.hbox2.Add(this.checkboxLed3);
            Gtk.Box.BoxChild w24 = ((Gtk.Box.BoxChild)(this.hbox2[this.checkboxLed3]));
            w24.Position = 2;
            w24.Expand = false;
            // Container child hbox2.Gtk.Box+BoxChild
            this.checkboxLed4 = new Gtk.CheckButton();
            this.checkboxLed4.CanFocus = true;
            this.checkboxLed4.Name = "checkboxLed4";
            this.checkboxLed4.Label = Mono.Unix.Catalog.GetString("Led 4");
            this.checkboxLed4.DrawIndicator = true;
            this.checkboxLed4.UseUnderline = true;
            this.hbox2.Add(this.checkboxLed4);
            Gtk.Box.BoxChild w25 = ((Gtk.Box.BoxChild)(this.hbox2[this.checkboxLed4]));
            w25.Position = 3;
            // Container child hbox2.Gtk.Box+BoxChild
            this.checkboxRumble = new Gtk.CheckButton();
            this.checkboxRumble.CanFocus = true;
            this.checkboxRumble.Name = "checkboxRumble";
            this.checkboxRumble.Label = Mono.Unix.Catalog.GetString("Rumble");
            this.checkboxRumble.DrawIndicator = true;
            this.checkboxRumble.UseUnderline = true;
            this.hbox2.Add(this.checkboxRumble);
            Gtk.Box.BoxChild w26 = ((Gtk.Box.BoxChild)(this.hbox2[this.checkboxRumble]));
            w26.Position = 4;
            w26.Expand = false;
            this.vbox1.Add(this.hbox2);
            Gtk.Box.BoxChild w27 = ((Gtk.Box.BoxChild)(this.vbox1[this.hbox2]));
            w27.Position = 6;
            w27.Expand = false;
            w27.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            this.hbox3 = new Gtk.HBox();
            this.hbox3.Name = "hbox3";
            this.hbox3.Spacing = 6;
            // Container child hbox3.Gtk.Box+BoxChild
            this.btnUpdateBattery = new Gtk.Button();
            this.btnUpdateBattery.CanFocus = true;
            this.btnUpdateBattery.Name = "btnUpdateBattery";
            this.btnUpdateBattery.UseUnderline = true;
            this.btnUpdateBattery.Label = Mono.Unix.Catalog.GetString("Update Battery");
            this.hbox3.Add(this.btnUpdateBattery);
            Gtk.Box.BoxChild w28 = ((Gtk.Box.BoxChild)(this.hbox3[this.btnUpdateBattery]));
            w28.Position = 0;
            w28.Expand = false;
            w28.Fill = false;
            // Container child hbox3.Gtk.Box+BoxChild
            this.progressbarBattery = new Gtk.ProgressBar();
            this.progressbarBattery.Name = "progressbarBattery";
            this.hbox3.Add(this.progressbarBattery);
            Gtk.Box.BoxChild w29 = ((Gtk.Box.BoxChild)(this.hbox3[this.progressbarBattery]));
            w29.Position = 1;
            this.vbox1.Add(this.hbox3);
            Gtk.Box.BoxChild w30 = ((Gtk.Box.BoxChild)(this.vbox1[this.hbox3]));
            w30.Position = 7;
            w30.Expand = false;
            w30.Fill = false;
            this.Add(this.vbox1);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            w1.SetUiManager(w2);
            this.Show();
            this.DisconnectAction.Activated += new System.EventHandler(this.OnDisconnectActionActivated);
            this.PlaySoundAction.Activated += new System.EventHandler(this.OnPlaySoundActionActivated);
            this.DumpMemoryAction.Activated += new System.EventHandler(this.OnDumpMemoryActionActivated);
            this.DisconnectAction1.Activated += new System.EventHandler(this.OnDisconnectActionActivated);
            this.CalibrateAction.Activated += new System.EventHandler(this.OnCalibrateActionActivated);
            this.comboboxReportingMode.Changed += new System.EventHandler(this.OnComboboxReportingModeChanged);
            this.drawingareaIR.ExposeEvent += new Gtk.ExposeEventHandler(this.OnDrawingareaIRExposeEvent);
            this.checkboxLed1.Pressed += new System.EventHandler(this.OnCheckboxLed1Pressed);
            this.checkboxLed2.Pressed += new System.EventHandler(this.OnCheckboxLed2Pressed);
            this.checkboxLed3.Pressed += new System.EventHandler(this.OnCheckboxLed3Pressed);
            this.checkboxLed4.Pressed += new System.EventHandler(this.OnCheckboxLed4Pressed);
            this.checkboxRumble.Pressed += new System.EventHandler(this.OnCheckboxRumblePressed);
            this.btnUpdateBattery.Pressed += new System.EventHandler(this.OnBtnUpdateBatteryPressed);
        }
    }
}
